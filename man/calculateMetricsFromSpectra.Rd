% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/function_calculateMetrics_from_Spectra_or_MsExperiment.R
\name{calculateMetricsFromSpectra}
\alias{calculateMetricsFromSpectra}
\title{Calculate QC metrics from a Spectra object}
\usage{
calculateMetricsFromSpectra(
  spectra,
  metrics = qualityMetrics(spectra),
  params = list()
)
}
\arguments{
\item{spectra}{`Spectra` object}

\item{metrics}{`character` specifying the quality metrics to be calculated
on `mse`}

\item{params}{`list` containing parameters passed to the quality metrics
functions defined in `metrics`}
}
\value{
named `numeric` vector
}
\description{
The function `calculateMetricsFromSpectra` calculates quality metrics from a
`Spectra`.
}
\details{
The metrics are defined by the argument `metrics`. Further arguments 
passed to the quality metric functions can be specified by the `params`
argument. `params` can contain named entries which are matched against 
the formal arguments of the quality metric functions.
}
\examples{
library(msdata)
library(Spectra)
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE)
spectra <- Spectra(fls, backend = MsBackendMzR())

## define the quality metrics to be calculated
metrics <- c("areaUnderTIC", "rtDuration", "msSignal10XChange")

## additional parameters passed to the quality metrics functions
## (MSLevel is an argument of areaUnderTIC and msSignal10XChange,
## relativeTo is an argument of msSignal10XChange)
params_l <- list(MSLevel = 1, relativeTo = c("Q1", "previous"), 
    change = c("jump", "fall"))
    
## calculate the metrics
calculateMetricsFromSpectra(spectra = spectra, metrics = metrics, 
    params = params_l)
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}
