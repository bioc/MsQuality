% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_visualizations.R
\name{plotMetricTibble}
\alias{plotMetricTibble}
\title{Helper function for plotMetric}
\usage{
plotMetricTibble(qc, metric)
}
\arguments{
\item{qc}{`data.frame`}

\item{metric}{`character`}
}
\value{
`tibble`
}
\description{
The function `plotMetricTibble` is a helper function for the function
`plotMetric`. It returns a tibble in long format that is interpretable
by `ggplot2`.
}
\details{
`plotMetricRibble` will select all columns that start with
`metric`. The different levels in the `name` column in the returned tibble 
correspond to the columns that were selected and do not contain the
`metric` prefix. In case there is no additional specification 
(e.g. for the metric `rtDuration` only the column `rtDuration` will 
be selected), the `name` column will include the `metric` (`rtDuration`).
}
\examples{
library(msdata)

## define file names containing spectra data for the samples and
## add them, along with other arbitrary files to the experiment
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE)

library(Spectra)
## import the data and add it to the mse object
sps <- Spectra(fls, backend = MsBackendMzR())

## define the quality metrics to be calculated
metrics <- c("areaUnderTic", "rtDuration", "msSignal10xChange")

## calculate the metrics
## additional parameters passed to the quality metrics functions
## (msLevel is an argument of areaUnderTic and msSignal10xChange,
## relativeTo is an argument of msSignal10xChange)
qc <- calculateMetricsFromSpectra(spectra = sps, metrics = metrics, 
    msLevel = 1, relativeTo = "Q1", change = "jump")
rownames(qc) <- c("Sample 1", "Sample 2")
plotMetricTibble(qc, metric = "areaUnderTic")
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}
