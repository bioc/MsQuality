% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/function_visualizations.R
\name{plotMetric}
\alias{plotMetric}
\title{Visualize a quality metric}
\usage{
plotMetric(qc, metric = "areaUnderTIC")
}
\arguments{
\item{qc}{`matrix`/`data.frame`}

\item{metric}{`character`}
}
\value{
`plotly`
}
\description{
The function `plotMetric` visualizes the metric values per sample. The 
function accepts the output of `calculateMetrics`,
`calculateMetricsFromSpectra`, or `calculateMetricsFromMsExperiment` and
a vector specifying the metric to display.
}
\details{
`plotMetric` will select all columns that start with
`metric`. The different levels in the `name` column in the returned tibble 
correspond to the columns that were selected and do not contain the
`metric` prefix. In case there is no additional specification 
(e.g. for the metric `rtDuration` only the column `rtDuration` will 
be selected), the `name` column will include the `metric` (`rtDuration`).
}
\examples{
library(msdata)
library(MsExperiment)
library(S4Vectors)
mse <- MsExperiment()
sd <- DataFrame(sample_id = c("QC1", "QC2"),
    sample_name = c("QC Pool", "QC Pool"), injection_idx = c(1, 3))
sampleData(mse) <- sd

## define file names containing spectra data for the samples and
## add them, along with other arbitrary files to the experiment
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE)
experimentFiles(mse) <- MsExperimentFiles(
    mzML_files = fls,
    annotations = "internal_standards.txt")
## link samples to data files: first sample to first file in "mzML_files",
## second sample to second file in "mzML_files"
mse <- linkSampleData(mse, with = "experimentFiles.mzML_files",
    sampleIndex = c(1, 2), withIndex = c(1, 2))
mse <- linkSampleData(mse, with = "experimentFiles.annotations",
                      sampleIndex = c(1, 2), withIndex = c(1, 1))

library(Spectra)
## import the data and add it to the mse object
spectra(mse) <- Spectra(fls, backend = MsBackendMzR())

## define the quality metrics to be calculated
metrics <- c("areaUnderTIC", "rtDuration", "msSignal10XChange")

## additional parameters passed to the quality metrics functions
## (MSLevel is an argument of areaUnderTIC and msSignal10XChange,
## relativeTo is an argument of msSignal10XChange)
params_l <- list(MSLevel = 1, relativeTo = c("Q1", "previous"), 
    change = c("jump", "fall"))
    
## calculate the metrics
qc <- calculateMetricsFromMsExperiment(msexp = mse, metrics = metrics, 
    params = params_l)
rownames(qc) <- c("Sample 1", "Sample 2")
plotMetric(qc, metric = "areaUnderTIC") 
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}
