% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/function_calculateMetrics_from_Spectra_or_MsExperiment.R
\name{calculateMetricsFromMsExperiment}
\alias{calculateMetricsFromMsExperiment}
\title{Calculate QC metrics from a MsExperiment object}
\usage{
calculateMetricsFromMsExperiment(msexp, metrics = qualityMetrics(msexp), ...)
}
\arguments{
\item{msexp}{`MsExperiment` object}

\item{metrics}{`character` specifying the quality metrics to be calculated
on `mse`}

\item{...}{arguments passed to the quality metrics functions defined in 
`metrics`}
}
\value{
`data.frame` containing in the columns the metrics for the 
different spectra (in rows)
}
\description{
The function `calculateMetricsFromMsExperiment` calculates quality metrics 
from a `MsExperiment` object. Each spectra in the `mse` object should 
refer to one mzML file/to one sample.
}
\details{
The metrics are defined by the argument `metrics`. Further arguments 
passed to the quality metric functions can be specified by the `params`
argument. `params` can contain named entries which are matched against 
the formal arguments of the quality metric functions.
}
\examples{
library(msdata)
library(MsExperiment)
library(S4Vectors)
mse <- MsExperiment()
sd <- DataFrame(sample_id = c("QC1", "QC2"),
    sample_name = c("QC Pool", "QC Pool"), injection_idx = c(1, 3))
sampleData(mse) <- sd

## define file names containing spectra data for the samples and
## add them, along with other arbitrary files to the experiment
fls <- dir(system.file("sciex", package = "msdata"), full.names = TRUE)
experimentFiles(mse) <- MsExperimentFiles(
    mzML_files = fls,
    annotations = "internal_standards.txt")
## link samples to data files: first sample to first file in "mzML_files",
## second sample to second file in "mzML_files"
mse <- linkSampleData(mse, with = "experimentFiles.mzML_files",
    sampleIndex = c(1, 2), withIndex = c(1, 2))
mse <- linkSampleData(mse, with = "experimentFiles.annotations",
                      sampleIndex = c(1, 2), withIndex = c(1, 1))

library(Spectra)
## import the data and add it to the mse object
spectra(mse) <- Spectra(fls, backend = MsBackendMzR())

## define the quality metrics to be calculated
metrics <- c("areaUnderTIC", "rtDuration", "msSignal10XChange")

## calculate the metrics
## additional parameters passed to the quality metrics functions
## (MsLevel is an argument of areaUnderTIC and msSignal10XChange,
## relativeTo is an argument of msSignal10XChange) passed to ...
calculateMetricsFromMsExperiment(msexp = mse, metrics = metrics, 
    msLevel = 1, change = "jump", relativeTo = "Q1")
calculateMetricsFromMsExperiment(msexp = mse, metrics = metrics, 
    msLevel = 1, change = "fall", relativeTo = "previous")
}
\author{
Thomas Naake, \email{thomasnaake@googlemail.com}
}
